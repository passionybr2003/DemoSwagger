{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://rest-stage.evergent.com/",
      "description": "The Staging API server"
    },
    {
      "url": "https://rest-dev.evergent.com/",
      "description": "The Dev API server"
    }
  ],
  "info": {
    "description": "<b>Last Updated Date 20th March 2021 </b><br> <br><h1><b>Evergent-Shahid consolidated API document</h1> </b>\n\n <br><br>\n <b>Note:</b> \"<b>x-</b>\" symbol should be ignored infront of Error Codes.  ",
    "version": "",
    "title": "EV Shahid API - V14.0",
    "contact": {
      "email": "pavankumar.a@evergent.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Shahid",
      "description": "Secured Admin-only calls"
    }
  ],
  "paths": {
    "/createUser": {
      "post": {
        "tags": [
          "Shahid"
        ],
        "operationId": "CreateUserRequestMessage",
        "description": "createUser() REST API is used to create an account in Evergent system. <br><br> <b>Note:</b> Either cpCustomerID or spAccountID is required based on registration type.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "CreateUserResponseMessage": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Success/Fail",
                          "example": "SUCCESS"
                        },
                        "responseCode": {
                          "type": "string",
                          "description": "Indicates if the response was successfully processed. Accepted values are <br> “1” – Success <br> “0” – Failure.",
                          "example": 1
                        },
                        "spAccountID": {
                          "type": "string",
                          "description": "A unique identifier of the account."
                        },
                        "cpCustomerID": {
                          "type": "string",
                          "description": "A unique identifier of the account in Partner systems."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "111111111": {
                    "value": {
                      "CreateUserResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Authentication Failed",
                            "errorCode": "111111111"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "Sample Successfull response": {
                    "value": {
                      "CreateUserResponseMessage": {
                        "cpCustomerID": "21021323488386788",
                        "spAccountID": "2102132348178598386788",
                        "message": "SUCCESS",
                        "responseCode": "1"
                      }
                    }
                  },
                  "eV1062": {
                    "value": {
                      "CreateUserResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "User Name already exists",
                            "errorCode": "ev20224"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "eV1268": {
                    "value": {
                      "CreateUserResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "NO Zone X Reference exists with the DMA ID: 001",
                            "errorCode": "eV1268"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  }
                }
              }
            }
          },
          "x- 111111111": {
            "description": "Authentication Failed"
          },
          "x- eV1268": {
            "description": "NO Zone X Reference exists with the DMA ID: 001"
          },
          "x- eV1062": {
            "description": "User Name already exists"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CreateUserRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/createUser"
                  }
                }
              },
              "examples": {
                "Customer Registration using email": {
                  "value": {
                    "CreateUserRequestMessage": {
                      "channelPartnerID": "SHAHID_AE",
                      "apiKey": "XXXX",
                      "customerUsername": "shahidafridi@yopmail.com",
                      "customerPassword": "P@$$w0rd!",
                      "email": "shahidafridi@yopmail.com",
                      "spAccountID": "191112114157906490851",
                      "firstName": "Shahid",
                      "lastName": "Afridi",
                      "country": "DU",
                      "dmaId": "001",
                      "alertNotificationEmail": "true"
                    }
                  }
                },
                "Customer Registration using phone number": {
                  "value": {
                    "CreateUserRequestMessage": {
                      "channelPartnerID": "SHAHID_AE",
                      "apiKey": "XXXX",
                      "mobileNumber": "971855532345",
                      "alternateUserName": "971855532345",
                      "spAccountID": "191112114157906490851",
                      "firstName": "Shahid",
                      "lastName": "Afridi",
                      "country": "DU",
                      "dmaId": "001",
                      "alertNotificationEmail": "true"
                    }
                  }
                },
                "Customer Registration using social login": {
                  "value": {
                    "CreateUserRequestMessage": {
                      "channelPartnerID": "SHAHID_AE",
                      "apiKey": "XXXX",
                      "socialLoginType": "Google",
                      "socialLoginID": "DD78rwerjhdfhdf57fhhg",
                      "spAccountID": "191112114157906490851",
                      "firstName": "Shahid",
                      "lastName": "Afridi",
                      "country": "DU",
                      "dmaId": "001",
                      "alertNotificationEmail": "true"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchAccountV2": {
      "post": {
        "tags": [
          "Shahid"
        ],
        "operationId": "SearchAccountV2RequestMessage",
        "description": "searchAccount() REST API is used to search for the account in EV system by providing valid registered email/Phone number of the customer.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "SearchAccountV2RequestMessage": {
                      "type": "object",
                      "properties": {
                        "contactUserName": {
                          "type": "string",
                          "description": "User name of the user used to login to account."
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact email of the user."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the user."
                        },
                        "channelPartnerID": {
                          "type": "string",
                          "description": "Channel partner of the user."
                        },
                        "message": {
                          "type": "string",
                          "description": "Success/Fail"
                        },
                        "accountID": {
                          "type": "string",
                          "description": "A unique SP Account Id of the customer in Partner systems."
                        },
                        "responseCode": {
                          "type": "string",
                          "description": "Indicates if the response was successfully processed. Accepted values are <br> “1” – Success. <br> “0” – Failure."
                        },
                        "isProfileComplete": {
                          "type": "string",
                          "description": "Indicates profile is complete or not."
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the account"
                        },
                        "cpCustomerID": {
                          "type": "string",
                          "description": "A unique ID of the account in EV systems."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "111111111": {
                    "value": {
                      "SearchAccountV2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Authentication Failed",
                            "errorCode": "111111111"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "Sample successful response": {
                    "value": {
                      "SearchAccountV2ResponseMessage": {
                        "contactUserName": "shahidafridi@yopmail.com",
                        "message": "SUCCESS",
                        "accountID": "191112114157906490851",
                        "responseCode": "1",
                        "channelPartnerID": "SHAHID_DUBAI",
                        "email": "shahidafridi@yopmail.com",
                        "isProfileComplete": "false",
                        "status": "Active",
                        "name": "Shahid Afridi",
                        "cpCustomerID": "1911121141490851"
                      }
                    }
                  },
                  "No Accounts found": {
                    "value": {
                      "SearchAccountV2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "No Accounts Found",
                            "errorCode": "111111111"
                          }
                        ],
                        "responseCode": "0",
                        "message": "No Accounts Found"
                      }
                    }
                  }
                }
              }
            }
          },
          "x- 20003": {
            "description": "Missing Required Parameter"
          },
          "x- 111111111": {
            "description": "No Accounts Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SearchAccountV2RequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/searchAccountV2"
                  }
                }
              },
              "examples": {
                "Sample successful request with spAccountID": {
                  "value": {
                    "SearchAccountV2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "spAccountID": "191112114157906490851"
                    }
                  }
                },
                "Sample successful request with alternateUserName": {
                  "value": {
                    "SearchAccountV2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "alternateUserName": "971585539167"
                    }
                  }
                },
                "Sample successful request with username": {
                  "value": {
                    "SearchAccountV2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "userName": "us1573559081@yopmail.com"
                    }
                  }
                },
                "Sample successful request with social login details": {
                  "value": {
                    "SearchAccountV2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "socialLoginID": "us1573559081@yopmail.com,",
                      "socialLoginType": "google"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getOAuthAccessTokenv2": {
      "post": {
        "tags": [
          "Shahid"
        ],
        "operationId": "GetOAuthAccessTokenv2RequestMessage",
        "description": "getOAuthAccessTokenv2() REST API is used to SignIn the user. (Combination of MobileNumber/Email and Device Details of the Customer).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "GetOAuthAccessTokenv2ResponseMessage": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Success/Fail."
                        },
                        "message": {
                          "type": "string",
                          "description": "Successful login message."
                        },
                        "responseCode": {
                          "type": "string",
                          "description": "Indicates if the response was successfully processed. Accepted values are <br> “1” – Success <br> “0” – Failure."
                        },
                        "accessToken": {
                          "type": "string",
                          "description": "Encrypted string of account info and device info."
                        },
                        "refreshToken": {
                          "type": "string",
                          "description": "Refresh Token for the user."
                        },
                        "tokenType": {
                          "type": "string",
                          "description": "Type of the token."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "20003": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Missing Required Parameter",
                            "errorCode": "20003"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "111111111": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Authentication Failed",
                            "errorCode": "111111111"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "eV2511": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Missing Required Parameter(s)",
                            "errorCode": "eV2511"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "eV2138": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Generic Failure",
                            "errorCode": "eV2138"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "eV2134": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "failureMessage": [
                          {
                            "errorMessage": "Wrong Username or Password",
                            "errorCode": "eV2134"
                          }
                        ],
                        "responseCode": "0"
                      }
                    }
                  },
                  "Sample Successful response": {
                    "value": {
                      "GetOAuthAccessTokenv2ResponseMessage": {
                        "responseCode": "1",
                        "message": "User Logged in successfully.",
                        "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJkZXZpY2VUeXBlIjoiTU9CSUxFIiwibG9jIjpudWxsLCJ2c3RhdHVzIjpmYWxzZSwibG9naW5UeXBlIjoiQ29udGFjdFVzZXJOYW1lIiwiaXNzIjoiZXYiLCJtb2RlbE5vIjoiU0cgTTAxIiwiY3AiOiJUVlBBU1MiLCJkZXZpY2VOYW1lIjoiSHlkaWUgbW9iaWxlIiwic2lkIjoiMjEwMzAxMTE0NjI3MTkyODQ4NDYyNTg0ODQ2MjUiLCJzZXJpYWxObyI6IjE2MTYyMzcyMTUiLCJ1aWQiOiI5NjNkNDI4ZC1hOWVkLTQ4YmYtOWY2OC1mNDM1MjgxN2UyNTciLCJhdWQiOiJUVlBBU1MiLCJuYmYiOjE2MTYyMzcwNzgsImV4cCI6MTYxNjI0MDY4MywiaWF0IjoxNjE2MjM3MDgzLCJqdGkiOiIxWTJZLTcxTzAtUzlMai1JYVllLXhSMXctbTZiYS1lciIsImNpZCI6Ijg0OTM1OTcifQ.MPDCqX9YySJqD1OFaruEPMiDj80A866uDD-5HMYWZZgMivrfF5SfHSi2jvhxW8YsMScosPUd46rXQFunKQV2UQkoYOMzTknj4SP6D7El7doAoFYD9SUMSGotSgor83l3cqhJRBq0Eva8BKZPrD3q3DcNlRbWg_YscQNKFwCjncBNd0K9zpNfOSZ0qGCdPvu1VPZT4VfVofxozOnvVc1wenDkwkE75GVrdLLvAOU-qWftiyRP4ZXmP_YKL0AmWvFjOoX66dugK_eR_gzWDt7KnaBK_LGAGzGTE0ODxyWCEjQphz01Ho9IgL7cjBsrPH_Reqt3zahGuBpbnlECgHOR0ram_XQdL2IFlsdWRZLxA9L-hNDNWutMKp2PwOJwzZQj-R3lxNlUlm6ie3cyKZ_cDMttacU6W2Lck3O2mIbDHDquamXt0uT2HjDxGujvuesHxMrEDs5HvYi3THYi4szZBTBTFwn9yN0RHB6W0kB-qlKcPDkLPrR7-1iJzSrexpGhYtQfwKyFHGEwG8OmLkXNRwyoVwOosFKrvObfpMlq0B6W0tPa6UdKSW3hFnjVW3rbtAAeLJCcr12xaLiD45KU9tX1j_e1m1v8ANm3LJ9CcH2fWfIqgx9zP0YErJ72kNxJDB7Hb6Tzuq-ZJfURaHaYQ-wY1tFD5Eh-zkFCd4PwKuo",
                        "tokenType": "Bearer",
                        "refreshToken": "qsRE-30Jx-Z5GT-4Rde-VW6s-plwW-yB",
                        "status": "SUCCESS"
                      }
                    }
                  }
                }
              }
            }
          },
          "x- 111111111": {
            "description": "Authentication Failed"
          },
          "x- eV2138": {
            "description": "Generic Failure"
          },
          "x- 20003": {
            "description": "Missing Required Parameter"
          },
          "x- eV2511": {
            "description": "Missing Required Parameter(s)"
          },
          "x- eV2134": {
            "description": "Incorrect login detials"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "GetOAuthAccessTokenRequestMessage": {
                    "type": "Object",
                    "$ref": "#/components/schemas/getOAuthAccessTokenv2"
                  }
                }
              },
              "examples": {
                "Successful request using username and password": {
                  "value": {
                    "GetOAuthAccessTokenv2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "contactUserName": "shahidafridi@yopmail.com",
                      "contactPassword": "P@$$w0rd!",
                      "spAccountID": "191112114157906490851",
                      "deviceMessage": {
                        "deviceName": "Afridi Mobile",
                        "deviceType": "MOBI",
                        "modelNo": "iPhone 11Pro",
                        "serialNo": "GUT45j6b7df66"
                      }
                    }
                  }
                },
                "Successful request using spAccountID": {
                  "value": {
                    "GetOAuthAccessTokenv2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "spAccountID": "191112114157906490851",
                      "deviceMessage": {
                        "deviceName": "Afridi Mobile",
                        "deviceType": "MOBI",
                        "modelNo": "iPhone 11Pro",
                        "serialNo": "045n45n8b88DHJDF"
                      }
                    }
                  }
                },
                "Successful request using Social login details": {
                  "value": {
                    "GetOAuthAccessTokenv2RequestMessage": {
                      "channelPartnerID": "SHAHID",
                      "apiKey": "XXXXX",
                      "socialLoginType": "google",
                      "socialLoginID": "shahidafridi@yopmail.com",
                      "deviceMessage": {
                        "deviceName": "Afridi Mobile",
                        "deviceType": "MOBI",
                        "modelNo": "iPhone 11Pro",
                        "serialNo": "GUT45j6b7df66"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "createUser": {
        "type": "object",
        "required": [
          "channelPartnerID",
          "apiKey"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique ID number of channel partner.",
            "enum": [
              "SHAHID_DUBAI"
            ]
          },
          "apiKey": {
            "type": "string",
            "description": "Partner authentication Key."
          },
          "customerUsername": {
            "type": "string",
            "description": "Username of the customer and it will be same as email when the user chooses to register with emailid."
          },
          "customerPassword": {
            "type": "string",
            "description": "Customer password. (Constant value to be passed for this parameter)"
          },
          "socialLoginType": {
            "type": "string",
            "description": "Social login type for the user.",
            "enum": [
              "Google",
              "Facebook",
              "Apple"
            ]
          },
          "socialLoginID": {
            "type": "string",
            "description": "Social login id of the user."
          },
          "socialLoginToken": {
            "type": "string",
            "default": "string",
            "description": "Token received on social login by user."
          },
          "email": {
            "type": "string",
            "description": "Email id of the customer."
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number of the customer."
          },
          "alternateUserName": {
            "type": "string",
            "default": "",
            "description": "It will be same as mobile number when the user choose to register with mobile number."
          },
          "spAccountID": {
            "type": "string",
            "description": "Unique account id in EV system."
          },
          "cpCustomerID": {
            "type": "string",
            "description": "Unique customer id in EV system."
          },
          "firstName": {
            "type": "string",
            "description": "Firstname  of the customer."
          },
          "lastName": {
            "type": "string",
            "description": "Lastname of the customer."
          },
          "country": {
            "type": "string",
            "description": "Country in which user has registered.(2 letter country code)",
            "enum": [
              "AE(UAE)",
              "US(USA)"
            ]
          },
          "alertNotificationEmail": {
            "type": "string",
            "description": "Notification Email related to Marketing and Promotions Opt in/opt out.",
            "default": "false"
          }
        }
      },
      "searchAccountV2": {
        "type": "object",
        "required": [
          "channelPartnerID",
          "apiKey"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique identification number of channel partner"
          },
          "apiKey": {
            "type": "string",
            "description": "Partner authentication Key."
          },
          "email": {
            "type": "string",
            "description": "Unique email of the account."
          },
          "spAccountID": {
            "type": "string",
            "description": "Unique sp account id for the account."
          },
          "userName": {
            "type": "string",
            "description": "Username of the customer and it will be same as email when the user chooses to register with emailid."
          },
          "alternateUserName": {
            "type": "string",
            "default": "",
            "description": "It will be same as mobile number when the user choose to register with mobile number."
          },
          "socialLoginType": {
            "type": "string",
            "description": "Social login type for the user.",
            "enum": [
              "Google",
              "Facebook",
              "Apple"
            ]
          },
          "socialLoginID": {
            "type": "string",
            "description": "Social login id of the user."
          },
          "cpCustomerID": {
            "type": "string",
            "description": "Unique customer id for the account."
          },
          "phone": {
            "type": "string",
            "description": "Mobile number of the user."
          }
        }
      },
      "getOAuthAccessTokenv2": {
        "type": "object",
        "required": [
          "channelPartnerID",
          "apiKey",
          "spAccountID"
        ],
        "properties": {
          "channelPartnerID": {
            "type": "string",
            "description": "Unique ID number of channel partner."
          },
          "apiKey": {
            "type": "string",
            "description": "Partner authentication key."
          },
          "customerUsername": {
            "type": "string",
            "description": "Username of the customer and it will be same as email when the user chooses to register with emailid."
          },
          "customerPassword": {
            "type": "string",
            "description": "Customer password. (Constant value to be passed for this parameter)"
          },
          "socialLoginType": {
            "type": "string",
            "description": "Social login type for the user.",
            "enum": [
              "Google",
              "Facebook",
              "Apple"
            ]
          },
          "socialLoginID": {
            "type": "string",
            "description": "Social login id of the user."
          },
          "alternateUserName": {
            "type": "string",
            "default": "",
            "description": "It will be same as mobile number when the user choose to register with mobile number."
          },
          "socialLoginToken": {
            "type": "string",
            "default": "string",
            "description": "Token received on social login by user."
          },
          "spAccountID": {
            "type": "string",
            "default": "",
            "description": "Unique SP Account ID stored in EV system."
          },
          "deviceMessage": {
            "type": "object",
            "$ref": "#/components/schemas/deviceDetails"
          }
        }
      },
      "deviceDetails": {
        "type": "object",
        "properties": {
          "serialNo": {
            "type": "string",
            "description": "Serial number of the device."
          },
          "deviceType": {
            "type": "string",
            "description": "Type of the device."
          },
          "deviceName": {
            "type": "string",
            "description": "Name of the device."
          },
          "modelNo": {
            "type": "string",
            "description": "Model number of the device."
          }
        }
      }
    }
  }
}
